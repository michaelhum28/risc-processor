/* Simulator = Quartus II Simulator */
/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 70000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 5000.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("BranchOut")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("GClock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("GReset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("InstructionOut")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("InstructionOut[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("InstructionOut[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "InstructionOut";
}

SIGNAL("MemWriteOut")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MuxOut")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MuxOut[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MuxOut";
}

SIGNAL("MuxOut[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MuxOut";
}

SIGNAL("MuxOut[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MuxOut";
}

SIGNAL("MuxOut[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MuxOut";
}

SIGNAL("MuxOut[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MuxOut";
}

SIGNAL("MuxOut[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MuxOut";
}

SIGNAL("MuxOut[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MuxOut";
}

SIGNAL("MuxOut[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MuxOut";
}

SIGNAL("ValueSelect")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ValueSelect[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ValueSelect";
}

SIGNAL("ValueSelect[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ValueSelect";
}

SIGNAL("ValueSelect[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ValueSelect";
}

SIGNAL("ZeroOut")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("RegWriteOut")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ALUOut")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ALUOut[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALUOut";
}

SIGNAL("ALUOut[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALUOut";
}

SIGNAL("ALUOut[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALUOut";
}

SIGNAL("ALUOut[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALUOut";
}

SIGNAL("ALUOut[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALUOut";
}

SIGNAL("ALUOut[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALUOut";
}

SIGNAL("ALUOut[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALUOut";
}

SIGNAL("ALUOut[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALUOut";
}

SIGNAL("ControlSignalOut")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ControlSignalOut[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ControlSignalOut";
}

SIGNAL("ControlSignalOut[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ControlSignalOut";
}

SIGNAL("ControlSignalOut[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ControlSignalOut";
}

SIGNAL("ControlSignalOut[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ControlSignalOut";
}

SIGNAL("ControlSignalOut[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ControlSignalOut";
}

SIGNAL("ControlSignalOut[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ControlSignalOut";
}

SIGNAL("ControlSignalOut[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ControlSignalOut";
}

SIGNAL("ControlSignalOut[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ControlSignalOut";
}

SIGNAL("WriteDataOut")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("WriteDataOut[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WriteDataOut";
}

SIGNAL("WriteDataOut[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WriteDataOut";
}

SIGNAL("WriteDataOut[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WriteDataOut";
}

SIGNAL("WriteDataOut[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WriteDataOut";
}

SIGNAL("WriteDataOut[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WriteDataOut";
}

SIGNAL("WriteDataOut[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WriteDataOut";
}

SIGNAL("WriteDataOut[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WriteDataOut";
}

SIGNAL("WriteDataOut[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WriteDataOut";
}

SIGNAL("ReadData2Out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ReadData2Out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadData2Out";
}

SIGNAL("ReadData2Out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadData2Out";
}

SIGNAL("ReadData2Out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadData2Out";
}

SIGNAL("ReadData2Out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadData2Out";
}

SIGNAL("ReadData2Out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadData2Out";
}

SIGNAL("ReadData2Out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadData2Out";
}

SIGNAL("ReadData2Out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadData2Out";
}

SIGNAL("ReadData2Out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadData2Out";
}

SIGNAL("ReadData1Out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ReadData1Out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadData1Out";
}

SIGNAL("ReadData1Out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadData1Out";
}

SIGNAL("ReadData1Out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadData1Out";
}

SIGNAL("ReadData1Out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadData1Out";
}

SIGNAL("ReadData1Out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadData1Out";
}

SIGNAL("ReadData1Out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadData1Out";
}

SIGNAL("ReadData1Out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadData1Out";
}

SIGNAL("ReadData1Out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadData1Out";
}

SIGNAL("ReadReg1Out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ReadReg1Out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadReg1Out";
}

SIGNAL("ReadReg1Out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadReg1Out";
}

SIGNAL("ReadReg1Out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadReg1Out";
}

SIGNAL("ReadReg1Out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadReg1Out";
}

SIGNAL("ReadReg1Out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadReg1Out";
}

SIGNAL("ReadReg2Out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ReadReg2Out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadReg2Out";
}

SIGNAL("ReadReg2Out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadReg2Out";
}

SIGNAL("ReadReg2Out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadReg2Out";
}

SIGNAL("ReadReg2Out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadReg2Out";
}

SIGNAL("ReadReg2Out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ReadReg2Out";
}

SIGNAL("WriteRegOut")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("WriteRegOut[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WriteRegOut";
}

SIGNAL("WriteRegOut[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WriteRegOut";
}

SIGNAL("WriteRegOut[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WriteRegOut";
}

SIGNAL("WriteRegOut[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WriteRegOut";
}

SIGNAL("WriteRegOut[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WriteRegOut";
}

SIGNAL("MemDataOut")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MemDataOut[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemDataOut";
}

SIGNAL("MemDataOut[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemDataOut";
}

SIGNAL("MemDataOut[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemDataOut";
}

SIGNAL("MemDataOut[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemDataOut";
}

SIGNAL("MemDataOut[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemDataOut";
}

SIGNAL("MemDataOut[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemDataOut";
}

SIGNAL("MemDataOut[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemDataOut";
}

SIGNAL("MemDataOut[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemDataOut";
}

SIGNAL("MClock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("BranchOut")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 999.0;
			LEVEL 0 FOR 1.0;
		}
		LEVEL X FOR 1498.0;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 67;
			LEVEL X FOR 999.0;
			LEVEL 0 FOR 1.0;
		}
		LEVEL X FOR 501.0;
	}
}

TRANSITION_LIST("GClock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 14;
			LEVEL 0 FOR 2500.0;
			LEVEL 1 FOR 2500.0;
		}
	}
}

TRANSITION_LIST("GReset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("InstructionOut[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("MemWriteOut")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1199.0;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 68;
			LEVEL X FOR 999.0;
			LEVEL 0 FOR 1.0;
		}
		LEVEL X FOR 800.0;
	}
}

TRANSITION_LIST("MuxOut[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("MuxOut[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("MuxOut[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("MuxOut[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("MuxOut[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("MuxOut[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("MuxOut[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("MuxOut[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ValueSelect[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70000.0;
	}
}

TRANSITION_LIST("ValueSelect[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70000.0;
	}
}

TRANSITION_LIST("ValueSelect[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70000.0;
	}
}

TRANSITION_LIST("ZeroOut")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 999.0;
			LEVEL 0 FOR 1.0;
		}
		LEVEL X FOR 1498.0;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 67;
			LEVEL X FOR 999.0;
			LEVEL 0 FOR 1.0;
		}
		LEVEL X FOR 501.0;
	}
}

TRANSITION_LIST("RegWriteOut")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1399.0;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 68;
			LEVEL X FOR 999.0;
			LEVEL 0 FOR 1.0;
		}
		LEVEL X FOR 600.0;
	}
}

TRANSITION_LIST("ALUOut[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ALUOut[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ALUOut[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ALUOut[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ALUOut[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ALUOut[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ALUOut[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ALUOut[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ControlSignalOut[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ControlSignalOut[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ControlSignalOut[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ControlSignalOut[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ControlSignalOut[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ControlSignalOut[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ControlSignalOut[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ControlSignalOut[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("WriteDataOut[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("WriteDataOut[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("WriteDataOut[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("WriteDataOut[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("WriteDataOut[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("WriteDataOut[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("WriteDataOut[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("WriteDataOut[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadData2Out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadData2Out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadData2Out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadData2Out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadData2Out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadData2Out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadData2Out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadData2Out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadData1Out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadData1Out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadData1Out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadData1Out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadData1Out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadData1Out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadData1Out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadData1Out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadReg1Out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadReg1Out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadReg1Out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadReg1Out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadReg1Out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadReg2Out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadReg2Out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadReg2Out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadReg2Out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("ReadReg2Out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("WriteRegOut[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("WriteRegOut[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("WriteRegOut[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("WriteRegOut[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("WriteRegOut[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("MemDataOut[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("MemDataOut[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("MemDataOut[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("MemDataOut[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("MemDataOut[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("MemDataOut[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("MemDataOut[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("MemDataOut[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 70000.0;
	}
}

TRANSITION_LIST("MClock")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 50.0;
		NODE
		{
			REPEAT = 699;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
		LEVEL 0 FOR 50.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "GClock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MClock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "GReset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MuxOut";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "MuxOut[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "MuxOut[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "MuxOut[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "MuxOut[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "MuxOut[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "MuxOut[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "MuxOut[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "MuxOut[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
	CHILDREN = 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "InstructionOut[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "RegWriteOut";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MemWriteOut";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "BranchOut";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ZeroOut";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALUOut";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 0;
	CHILDREN = 50, 51, 52, 53, 54, 55, 56, 57;
}

DISPLAY_LINE
{
	CHANNEL = "ALUOut[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "ALUOut[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "ALUOut[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "ALUOut[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "ALUOut[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "ALUOut[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "ALUOut[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "ALUOut[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "ReadData1Out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 0;
	CHILDREN = 59, 60, 61, 62, 63, 64, 65, 66;
}

DISPLAY_LINE
{
	CHANNEL = "ReadData1Out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "ReadData1Out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "ReadData1Out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "ReadData1Out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "ReadData1Out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "ReadData1Out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "ReadData1Out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "ReadData1Out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "ReadData2Out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 0;
	CHILDREN = 68, 69, 70, 71, 72, 73, 74, 75;
}

DISPLAY_LINE
{
	CHANNEL = "ReadData2Out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "ReadData2Out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "ReadData2Out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "ReadData2Out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "ReadData2Out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "ReadData2Out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "ReadData2Out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "ReadData2Out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "WriteDataOut";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 0;
	CHILDREN = 77, 78, 79, 80, 81, 82, 83, 84;
}

DISPLAY_LINE
{
	CHANNEL = "WriteDataOut[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "WriteDataOut[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "WriteDataOut[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "WriteDataOut[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "WriteDataOut[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "WriteDataOut[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "WriteDataOut[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "WriteDataOut[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "WriteRegOut";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 0;
	CHILDREN = 86, 87, 88, 89, 90;
}

DISPLAY_LINE
{
	CHANNEL = "WriteRegOut[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "WriteRegOut[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "WriteRegOut[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "WriteRegOut[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "WriteRegOut[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "MemDataOut";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 0;
	CHILDREN = 92, 93, 94, 95, 96, 97, 98, 99;
}

DISPLAY_LINE
{
	CHANNEL = "MemDataOut[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 91;
}

DISPLAY_LINE
{
	CHANNEL = "MemDataOut[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 91;
}

DISPLAY_LINE
{
	CHANNEL = "MemDataOut[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 91;
}

DISPLAY_LINE
{
	CHANNEL = "MemDataOut[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 91;
}

DISPLAY_LINE
{
	CHANNEL = "MemDataOut[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 91;
}

DISPLAY_LINE
{
	CHANNEL = "MemDataOut[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 91;
}

DISPLAY_LINE
{
	CHANNEL = "MemDataOut[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 91;
}

DISPLAY_LINE
{
	CHANNEL = "MemDataOut[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 91;
}

DISPLAY_LINE
{
	CHANNEL = "ReadReg1Out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 100;
	TREE_LEVEL = 0;
	CHILDREN = 101, 102, 103, 104, 105;
}

DISPLAY_LINE
{
	CHANNEL = "ReadReg1Out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 100;
}

DISPLAY_LINE
{
	CHANNEL = "ReadReg1Out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 100;
}

DISPLAY_LINE
{
	CHANNEL = "ReadReg1Out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 100;
}

DISPLAY_LINE
{
	CHANNEL = "ReadReg1Out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 104;
	TREE_LEVEL = 1;
	PARENT = 100;
}

DISPLAY_LINE
{
	CHANNEL = "ReadReg1Out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 105;
	TREE_LEVEL = 1;
	PARENT = 100;
}

DISPLAY_LINE
{
	CHANNEL = "ReadReg2Out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 106;
	TREE_LEVEL = 0;
	CHILDREN = 107, 108, 109, 110, 111;
}

DISPLAY_LINE
{
	CHANNEL = "ReadReg2Out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 106;
}

DISPLAY_LINE
{
	CHANNEL = "ReadReg2Out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 106;
}

DISPLAY_LINE
{
	CHANNEL = "ReadReg2Out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 106;
}

DISPLAY_LINE
{
	CHANNEL = "ReadReg2Out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 106;
}

DISPLAY_LINE
{
	CHANNEL = "ReadReg2Out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 106;
}

DISPLAY_LINE
{
	CHANNEL = "ControlSignalOut";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 112;
	TREE_LEVEL = 0;
	CHILDREN = 113, 114, 115, 116, 117, 118, 119, 120;
}

DISPLAY_LINE
{
	CHANNEL = "ControlSignalOut[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 112;
}

DISPLAY_LINE
{
	CHANNEL = "ControlSignalOut[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 112;
}

DISPLAY_LINE
{
	CHANNEL = "ControlSignalOut[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 115;
	TREE_LEVEL = 1;
	PARENT = 112;
}

DISPLAY_LINE
{
	CHANNEL = "ControlSignalOut[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 116;
	TREE_LEVEL = 1;
	PARENT = 112;
}

DISPLAY_LINE
{
	CHANNEL = "ControlSignalOut[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 112;
}

DISPLAY_LINE
{
	CHANNEL = "ControlSignalOut[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 118;
	TREE_LEVEL = 1;
	PARENT = 112;
}

DISPLAY_LINE
{
	CHANNEL = "ControlSignalOut[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 119;
	TREE_LEVEL = 1;
	PARENT = 112;
}

DISPLAY_LINE
{
	CHANNEL = "ControlSignalOut[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 120;
	TREE_LEVEL = 1;
	PARENT = 112;
}

DISPLAY_LINE
{
	CHANNEL = "ValueSelect";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 121;
	TREE_LEVEL = 0;
	CHILDREN = 122, 123, 124;
}

DISPLAY_LINE
{
	CHANNEL = "ValueSelect[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 122;
	TREE_LEVEL = 1;
	PARENT = 121;
}

DISPLAY_LINE
{
	CHANNEL = "ValueSelect[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 123;
	TREE_LEVEL = 1;
	PARENT = 121;
}

DISPLAY_LINE
{
	CHANNEL = "ValueSelect[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 124;
	TREE_LEVEL = 1;
	PARENT = 121;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
